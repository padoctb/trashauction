{"version":3,"sources":["img/bg.jpg","img/icons/ticker.svg","img/icons/bg.svg","img/icons/play.svg","img/icons/stop.svg","img/icons/timeup.svg","img/icons/timedown.svg","img/icons/doubleup.svg","img/icons/pause.svg","img/icons/download.svg","img/icons/delete.svg","tools/index.js","components/Timer.js","tools/hooks/index.js","components/Header.js","components/Lot.js","components/LotsList.js","components/TopTicker.js","App.js","index.js"],"names":["module","exports","formatTime","time","ms","milliseconds","parseInt","seconds","Math","floor","minutes","generateId","random","toString","TimerWrapper","styled","div","TimeleftWrapper","TimeleftText","TimeleftControl","TimerBtn","img","Timer","initialTime","useState","isRunning","setIsRunning","prevTime","setPrevTime","currentMs","setCurrentMs","timeleft","setTimeleft","changeTime","newTime","Date","now","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","prev","diffTime","newMs","stopTimer","increaseMinute","e","increaseNumber","Number","target","getAttribute","onClick","className","alt","src","pauseIcon","playIcon","stopIcon","data-increase-number","timeUp","timeUpx2","timeDown","StyledHeader","header","Buyout","label","BayoutInput","input","Header","value","setValue","htmlFor","onChange","isNaN","Wrapper","li","Input","NameInput","Pos","RemoveBtn","Lot","lotData","name","price","pos","updateLot","deleteLot","setIsChangingLot","priceInputRef","addPriceInputRef","nameValue","setName","priceValue","setPrice","addPriceValue","setAddPrice","addEventListener","document","keyCode","hasAttribute","blur","updateValues","updatedPrice","priceInputClasslist","classList","add","setTimeout","remove","animateAddingPrice","data-input","onBlur","spellCheck","placeholder","ref","deleteIcon","List","ul","BottomButtons","DownloadCsvBtn","AddNewLotBtn","LotsList","lots","changeLots","newLotData","prevLots","map","lot","sort","a","b","removedLotData","length","filter","TransitionGroup","i","CSSTransition","key","timeout","enter","exit","classNames","newLots","push","lotsNames","lotsInCsv","lotName","join","encodedUri","encodeURI","link","createElement","setAttribute","toLocaleString","body","appendChild","click","removeChild","data-effect","data-place","data-tip","downloadIcon","TopTicket","span","LotWrapper","LotPosition","LotName","LotPrice","TickerWrapper","TopTicker","isChangingLot","tickerContent","lotsForRender","forEach","content","createContentForTicker","offset","speed","mode","GlobalStyle","createGlobalStyle","bgValue","bg","BlackCover","isActive","SettingsButtons","SettingsBtn","ToggleTicker","BgChange","BgInputWrapper","BgInput","RemoveBgBtn","App","bgFromLs","localStorage","getItem","isShowTicker","setIsShowTicker","isChangeBgActive","setIsChangeBgActive","bgInputValue","setBgInputValue","isClickedOut","undefined","path","find","element","setItem","prevState","bgIcon","tickerIcon","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9f08e605.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.eb10c485.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ticker.c1bf77a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/bg.ac7c0690.svg\";","module.exports = __webpack_public_path__ + \"static/media/play.0ad03614.svg\";","module.exports = __webpack_public_path__ + \"static/media/stop.a081961b.svg\";","module.exports = __webpack_public_path__ + \"static/media/timeup.a00f01e7.svg\";","module.exports = __webpack_public_path__ + \"static/media/timedown.9ed74592.svg\";","module.exports = __webpack_public_path__ + \"static/media/doubleup.97b6b174.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause.db1c4442.svg\";","module.exports = __webpack_public_path__ + \"static/media/download.9203d649.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.eedf38f8.svg\";","const formatMsDigits = ms => ms < 10 ? '0' + ms : '' + ms\r\n\r\nexport const formatTime = time => {\r\n  let milliseconds = parseInt(time % 1000),\r\n    seconds = Math.floor((time / 1000) % 60),\r\n    minutes = Math.floor(time / (1000 * 60));\r\n\r\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n  seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n  milliseconds = formatMsDigits(Math.floor(milliseconds / 10))\r\n\r\n  return {\r\n    milliseconds,\r\n    seconds,\r\n    minutes\r\n  };\r\n};\r\n\r\nexport const generateId = () => `f${(~~(Math.random()*1e8)).toString(16)}`","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useInterval } from '../tools/hooks';\r\nimport { formatTime } from '../tools';\r\nimport playIcon from '../img/icons/play.svg';\r\nimport stopIcon from '../img/icons/stop.svg';\r\nimport timeUp from '../img/icons/timeup.svg';\r\nimport timeDown from '../img/icons/timedown.svg';\r\nimport timeUpx2 from '../img/icons/doubleup.svg';\r\nimport pauseIcon from '../img/icons/pause.svg';\r\n\r\nconst TimerWrapper = styled.div`\r\n  display: flex;\r\n  font-size: 62px;\r\n  flex-direction: column;\r\n  &:hover .timer-btn {\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n\r\nconst TimeleftWrapper = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst TimeleftText = styled.div`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst TimeleftControl = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst TimerBtn = styled.img`\r\n  cursor: pointer;\r\n  transition: 0.2s ease;\r\n  opacity: 0;\r\n  &:hover {\r\n    opacity: 1 !important;\r\n    transform: scale(1.3);\r\n  }\r\n  &:active {\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\nconst interval = 10;\r\n\r\nconst Timer = ({ initialTime }) => {\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [prevTime, setPrevTime] = useState(null);\r\n  const [currentMs, setCurrentMs] = useState(initialTime);\r\n  const [timeleft, setTimeleft] = useState(formatTime(initialTime));\r\n\r\n  const changeTime = (ms) => {\r\n    const newTime = formatTime(ms);\r\n    setPrevTime(Date.now());\r\n    setCurrentMs(ms);\r\n    setTimeleft(newTime);\r\n  };\r\n\r\n  useInterval(\r\n    () => {\r\n      let prev = prevTime ? prevTime : Date.now();\r\n      let diffTime = Date.now() - prev;\r\n      let newMs = currentMs - diffTime;\r\n\r\n      if (newMs <= 10) {\r\n        stopTimer();\r\n      } else changeTime(newMs);\r\n    },\r\n    isRunning ? interval : null,\r\n  );\r\n\r\n  const handleTime = () => {\r\n    if (!currentMs) return;\r\n    setIsRunning(!isRunning);\r\n    setPrevTime(null);\r\n  };\r\n\r\n  const increaseMinute = (e) => {\r\n    const increaseNumber = Number(e.target.getAttribute('data-increase-number'));\r\n    const newMs = currentMs + 60000 * increaseNumber;\r\n\r\n    changeTime(newMs);\r\n  };\r\n\r\n  const decreaseMinute = () => {\r\n    if (currentMs <= 60000) return;\r\n    const newMs = currentMs - 60000;\r\n\r\n    changeTime(newMs);\r\n  };\r\n\r\n  const stopTimer = () => {\r\n    changeTime(0);\r\n    setIsRunning(false);\r\n  };\r\n\r\n  return (\r\n    <TimerWrapper>\r\n      <TimeleftWrapper>\r\n        <div>\r\n          <TimerBtn\r\n            onClick={handleTime}\r\n            className=\"timer-btn\"\r\n            alt=\"play\"\r\n            src={!isRunning ? playIcon : pauseIcon}\r\n          />\r\n        </div>\r\n        <TimeleftText>\r\n          {timeleft && `${timeleft.minutes}:${timeleft.seconds}:${timeleft.milliseconds}`}\r\n        </TimeleftText>\r\n        <div>\r\n          <TimerBtn onClick={stopTimer} className=\"timer-btn\" alt=\"stop\" src={stopIcon} />\r\n        </div>\r\n      </TimeleftWrapper>\r\n      <TimeleftControl>\r\n        <TimerBtn\r\n          onClick={increaseMinute}\r\n          data-increase-number=\"1\"\r\n          className=\"timer-btn\"\r\n          alt=\"timeup\"\r\n          src={timeUp}\r\n        />\r\n        <TimerBtn\r\n          onClick={increaseMinute}\r\n          data-increase-number=\"2\"\r\n          className=\"timer-btn\"\r\n          alt=\"timeupx2\"\r\n          src={timeUpx2}\r\n        />\r\n        <TimerBtn onClick={decreaseMinute} className=\"timer-btn\" alt=\"timedown\" src={timeDown} />\r\n      </TimeleftControl>\r\n    </TimerWrapper>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport function useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport Timer from './Timer'\n\nconst StyledHeader = styled.header`\n  font-size: 30px;\n  justify-content: space-between;\n  position: fixed;\n  right: 0;\n  top: 5%;\n  flex-direction: column;\n`;\n\nconst Buyout = styled.label`\n  display: block;\n  opacity: .5;\n  font-weight: 500;\n  padding-left: 114px;\n  padding-top: 14px;\n  transform: translateY(10px);\n  &:hover {\n    opacity: .7;\n  }\n`\n\nconst BayoutInput = styled.input`\n  border: none;\n  outline: none;\n  margin-right: 22px;\n  background-color: transparent;\n  font-size: 30px;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n  width: 90px;\n  color: #fff;\n`\n\nconst Header = () => {\n\n  const [value, setValue] = useState(4000)\n\n  const onChangeHandler = e => !isNaN(e.target.value) && setValue(e.target.value)\n\n  return (\n    <StyledHeader>\n      <Buyout htmlFor='bayout'>Выкуп: <BayoutInput id='bayout' onChange={onChangeHandler} value={value}/></Buyout>\n      <Timer initialTime={1500000}/>\n    </StyledHeader>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport deleteIcon from '../img/icons/delete.svg';\n\nconst Wrapper = styled.li`\n  font-size: 26px;\n  position: relative;\n  margin-left: 10px;\n  display: flex;\n`;\n\nconst Input = styled.input`\n  border: 2px solid rgba(249, 249, 249, 0.3);\n  margin: 6px 0;\n  border-radius: 4px;\n  padding: 10px;\n  box-sizing: border-box;\n  background-color: transparent;\n  color: #fff;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n  outline: none;\n  font-size: 22px;\n  margin-left: 5px;\n  transition: 0.2s ease;\n  width: 80px;\n  &:hover {\n    background-color: rgba(255, 255, 255, 0.2);\n  }\n  &::placeholder {\n    color: #fff;\n    opacity: 0.7;\n  }\n`;\n\nconst NameInput = styled(Input)`\n  width: 100%;\n`;\n\nconst Pos = styled.div`\n  position: absolute;\n  left: -44px;\n  top: 50%;\n  opacity: 0.4;\n  transform: translateY(-50%);\n`;\n\nconst RemoveBtn = styled.img`\n  margin-left: 10px;\n  opacity: 0.6;\n  cursor: pointer;\n  transition: 0.2s ease;\n  &:hover {\n    opacity: 1;\n    transform: scale(1.2);\n  }\n  &:active {\n    transform: scale(0.9);\n  }\n`;\n\nconst Lot = ({\n  lotData: { name, id, price },\n  pos,\n  updateLot,\n  deleteLot,\n  lotData,\n  setIsChangingLot,\n}) => {\n  const priceInputRef = useRef(null);\n  const addPriceInputRef = useRef(null);\n\n  const [nameValue, setName] = useState(name);\n  const [priceValue, setPrice] = useState(price);\n  const [addPriceValue, setAddPrice] = useState('');\n\n  useEffect(() => {\n    priceInputRef.current.addEventListener('focus', (e) => e.target.value === '0' && setPrice(''));\n\n    document.addEventListener('keypress', (e) => {\n      if (e.keyCode === 13 && e.target.hasAttribute('data-input')) e.target.blur();\n    });\n  }, []);\n\n  const animateAddingPrice = () => {\n    const priceInputClasslist = priceInputRef.current.classList;\n    \n    priceInputClasslist.add('added-value-animation');\n    setTimeout(() => priceInputClasslist.remove('added-value-animation'), 500);\n  }\n\n  const onNameChange = (e) => {\n    setIsChangingLot(true);\n    setName(e.target.value);\n  };\n\n  const onPriceChange = (e) => {\n    setIsChangingLot(true);\n    if (isNaN(e.target.value)) return;\n    setPrice(e.target.value);\n  };\n\n  const onAddPriceChange = (e) => {\n    setIsChangingLot(true);\n    if (isNaN(e.target.value)) return;\n    setAddPrice(e.target.value);\n  };\n\n  const onDelete = () => deleteLot(lotData);\n\n  const updateValues = () => {\n    setIsChangingLot(false);\n    const updatedPrice = Number(priceValue) + Number(addPriceValue);\n\n    if (updatedPrice > priceValue) animateAddingPrice()\n\n    setPrice(updatedPrice);\n    setAddPrice('');\n\n    updateLot({\n      name: nameValue,\n      price: updatedPrice,\n      id,\n    });\n  };\n\n  return (\n    <Wrapper>\n      <Pos>{pos}.</Pos>\n      <NameInput\n        data-input\n        onBlur={updateValues}\n        onChange={onNameChange}\n        spellCheck=\"false\"\n        value={nameValue}\n        placeholder=\"Позиция\"\n      />\n      <Input\n        data-input\n        ref={priceInputRef}\n        onBlur={updateValues}\n        onChange={onPriceChange}\n        spellCheck=\"false\"\n        value={priceValue}\n        placeholder=\"P\"\n      />\n      <Input\n        data-input\n        ref={addPriceInputRef}\n        onBlur={updateValues}\n        onChange={onAddPriceChange}\n        spellCheck=\"false\"\n        value={addPriceValue}\n        placeholder=\"+\"\n      />\n      <RemoveBtn onClick={onDelete} alt=\"delete\" src={deleteIcon} />\n    </Wrapper>\n  );\n};\n\nexport default Lot;\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport downloadIcon from '../img/icons/download.svg';\r\nimport Lot from './Lot';\r\nimport { generateId } from '../tools';\r\nimport '../style/styles.css';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 100px 340px 100px 40px;\r\n`;\r\n\r\nconst List = styled.ul`\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n`;\r\n\r\nconst BottomButtons = styled.div``;\r\n\r\nconst DownloadCsvBtn = styled.img`\r\n  float: right;\r\n  float: right;\r\n  opacity: .4;\r\n  margin-top: 11px;\r\n  margin-right: 13px;\r\n  transition: 0.2s ease;\r\n  cursor: pointer;\r\n  &:hover {\r\n    opacity: 1;\r\n    transform: scale(1.2);\r\n    color: #fff;\r\n  }\r\n  &:active {\r\n    transform: scale(0.9);\r\n  }\r\n`\r\n\r\nconst AddNewLotBtn = styled.div`\r\n  width: 50px;\r\n  text-align: center;\r\n  background-color: rgba(249, 249, 249, 0.3);\r\n  border-radius: 4px;\r\n  float: right;\r\n  margin-top: 8px;\r\n  cursor: pointer;\r\n  transition: 0.2s ease;\r\n  &:hover {\r\n    background-color: rgba(249, 249, 249, 0.5);\r\n    transform: scale(1.2);\r\n  }\r\n  &:active {\r\n    transform: scale(0.9);\r\n  }\r\n`;\r\n\r\nconst LotsList = ({ lots, changeLots, setIsChangingLot }) => {\r\n\r\n  const addNewLot = () => {\r\n    changeLots((prevLots) => {\r\n      const newLots = [...prevLots];\r\n      newLots.push({ name: '', id: generateId(), price: 0 });\r\n      return newLots;\r\n    });\r\n  };\r\n\r\n  const updateLot = (newLotData) => {\r\n    changeLots((prevLots) => {\r\n      const newLots = [...prevLots].map((lot) => {\r\n        if (lot.id === newLotData.id) {\r\n          return newLotData;\r\n        }\r\n\r\n        return lot;\r\n      });\r\n\r\n      return newLots.sort((a, b) => b.price - a.price);\r\n    });\r\n  };\r\n\r\n  const deleteLot = (removedLotData) => {\r\n    if (lots.length === 1) return;\r\n    setIsChangingLot(true);\r\n    changeLots((prevLots) => {\r\n      setTimeout(() => setIsChangingLot(false), 0);\r\n      return [...prevLots].filter((lot) => lot.id !== removedLotData.id);\r\n    });\r\n  };\r\n\r\n  const downloadCSV = () => {\r\n    const lotsNames = lots.map(lot => [lot.name])\r\n    const lotsInCsv = `data:text/csv;charset=utf-8,${lotsNames.map(lotName => lotName.join(\",\")).join(\"\\n\")}`\r\n    const encodedUri = encodeURI(lotsInCsv);\r\n\r\n    const link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", encodedUri);\r\n    link.setAttribute(\"download\", `auction_lots (${new Date().toLocaleString()}).csv`);\r\n    document.body.appendChild(link); \r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <List>\r\n        <TransitionGroup>\r\n          {lots.map((lot, i) => (\r\n            <CSSTransition key={lot.id} timeout={{\r\n              enter: 300,\r\n              exit: 0\r\n            }} classNames=\"item\">\r\n              <Lot\r\n                setIsChangingLot={setIsChangingLot}\r\n                deleteLot={deleteLot}\r\n                updateLot={updateLot}\r\n                key={lot.id}\r\n                pos={++i}\r\n                lotData={lot}\r\n              />\r\n            </CSSTransition>\r\n          ))}\r\n        </TransitionGroup>\r\n      </List>\r\n      <BottomButtons>\r\n        <AddNewLotBtn onClick={addNewLot}>+</AddNewLotBtn>\r\n        <DownloadCsvBtn onClick={downloadCSV} data-effect='solid' data-place=\"top\" data-tip='Ипортировать лоты в CSV' src={downloadIcon}/>\r\n      </BottomButtons>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default LotsList;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Ticker from 'react-ticker';\r\n\r\nconst TopTicket = styled.span`\r\n  font-weight: 400;\r\n  font-size: 22px;\r\n`;\r\n\r\nconst LotWrapper = styled.span`\r\n  padding: 0 22px;\r\n  &:last-child {\r\n    padding-right: 400px;\r\n  }\r\n`;\r\n\r\nconst LotPosition = styled.span`\r\n  font-weight: 600;\r\n`;\r\n\r\nconst LotName = styled.span`\r\n  font-weight: 400;\r\n`;\r\n\r\nconst LotPrice = styled.span`\r\n  padding: 0 4px;\r\n`;\r\n\r\nconst TickerWrapper = styled.div`\r\n  position: fixed;\r\n  width: 20000px;\r\n  top: 0;\r\n  left: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  height: 36px;\r\n  z-index: 10;\r\n`;\r\n\r\nconst TopTicker = ({ lots, isChangingLot }) => {\r\n\r\n  const createContentForTicker = (lots) => {\r\n    const lotsForRender = [];\r\n\r\n    lots.forEach((lot, i) => {\r\n      if (!lot.name) return;\r\n\r\n      lotsForRender.push({\r\n        content: (\r\n          <span>\r\n            <LotPosition>{++i}. </LotPosition>\r\n            <LotName>{lot.name}</LotName>\r\n            <LotPrice>({lot.price})</LotPrice>\r\n          </span>\r\n        ),\r\n        id: lot.id,\r\n      });\r\n    });\r\n\r\n    return lotsForRender;\r\n  };\r\n\r\n  const tickerContent = createContentForTicker(lots);\r\n\r\n  return (\r\n    <>\r\n      {(\r\n        <TickerWrapper>\r\n          {!isChangingLot && (\r\n            <Ticker offset={600} speed={10} mode=\"chain\">\r\n              {() => (\r\n                <TopTicket>\r\n                  {tickerContent.length > 1 &&\r\n                    tickerContent.map((lot) => <LotWrapper key={lot.id}>{lot.content}</LotWrapper>)}\r\n                </TopTicket>\r\n              )}\r\n            </Ticker>\r\n          )}\r\n        </TickerWrapper>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TopTicker;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled, { createGlobalStyle } from 'styled-components';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport bg from './img/bg.jpg';\r\nimport tickerIcon from './img/icons/ticker.svg';\r\nimport bgIcon from './img/icons/bg.svg';\r\nimport Header from './components/Header';\r\nimport LotsList from './components/LotsList';\r\nimport TopTicker from './components/TopTicker';\r\nimport { generateId } from './tools';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    background-image: url(${({ bgValue }) => (bgValue ? bgValue : bg)});\r\n    background-size: cover;\r\n    background-attachment: fixed;\r\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n    font-size: 24px;\r\n    color: #fff;\r\n    font-weight: 600;\r\n    min-width: 600px;\r\n    background-color: gray;\r\n  }\r\n`;\r\n\r\nconst BlackCover = styled.div`\r\n  position: fixed;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: ${({isActive}) => isActive ? 'rgba(0,0,0,.6)' : 'transparent'};\r\n  top: 0;\r\n  left: 0;\r\n  z-index: -1;\r\n`\r\n\r\nconst SettingsButtons = styled.div`\r\n  position: fixed;\r\n  bottom: 6px;\r\n  right: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst SettingsBtn = styled.img`\r\n  opacity: ${({ isActive }) => (isActive ? '.6' : '.3')};\r\n  cursor: pointer;\r\n  transition: 0.2s ease;\r\n  display: block;\r\n  &:hover {\r\n    opacity: 1;\r\n    transform: scale(1.2);\r\n  }\r\n  &:active {\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\nconst ToggleTicker = styled(SettingsBtn)`\r\n  width: 40px;\r\n  height: 40px;\r\n`;\r\n\r\nconst BgChange = styled(SettingsBtn)`\r\n  width: 32px;\r\n  height: 32px;\r\n  margin-bottom: 1px;\r\n  margin-right: 4px;\r\n`;\r\n\r\nconst BgInputWrapper = styled.div`\r\n  display: flex;\r\n  margin-right: -20px;\r\n`;\r\n\r\nconst BgInput = styled.input`\r\n  border: 2px solid rgba(249, 249, 249, 0.3);\r\n  border-radius: 4px;\r\n  padding: 6px;\r\n  box-sizing: border-box;\r\n  background-color: transparent;\r\n  color: #fff;\r\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n  transition: 0.2s ease;\r\n  outline: none;\r\n  font-size: 14px;\r\n  margin-right: 10px;\r\n  padding-right: 30px;\r\n  &:hover {\r\n    background-color: rgba(255, 255, 255, 0.2);\r\n  }\r\n  &::placeholder {\r\n    color: #fff;\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n\r\nconst RemoveBgBtn = styled.div`\r\n  transform: translateX(-40px);\r\n  font-weight: 400;\r\n  cursor: pointer;\r\n  padding: 0 10px;\r\n  opacity: 0.5;\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst App = () => {\r\n  const [lots, changeLots] = useState([\r\n    {\r\n      name: '',\r\n      id: generateId(),\r\n      price: 0,\r\n    },\r\n  ]);\r\n\r\n  const bgFromLs = localStorage.getItem('backgroundUrl')\r\n    ? localStorage.getItem('backgroundUrl')\r\n    : '';\r\n\r\n  const [isChangingLot, setIsChangingLot] = useState(false);\r\n  const [isShowTicker, setIsShowTicker] = useState(true);\r\n  const [isChangeBgActive, setIsChangeBgActive] = useState(false);\r\n  const [bgInputValue, setBgInputValue] = useState(bgFromLs);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', (e) => {\r\n      const isClickedOut =\r\n        e.path.find((element) => element.id === 'settings-wrapper') === undefined;\r\n      if (isChangeBgActive && isClickedOut) setIsChangeBgActive(false);\r\n    });\r\n  }, [isChangeBgActive]);\r\n\r\n  const toggleTicker = () => setIsShowTicker((prevState) => !prevState);\r\n\r\n  const toggleBgChangeState = () => setIsChangeBgActive((prevState) => !prevState);\r\n\r\n  const onChangeBgInputValueHandler = (e) => {\r\n    localStorage.setItem('backgroundUrl', e.target.value);\r\n    setBgInputValue(e.target.value);\r\n  };\r\n\r\n  const clearBgInputValue = () => {\r\n    localStorage.setItem('backgroundUrl', '');\r\n    setBgInputValue('');\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle bgValue={bgInputValue} />\r\n      <BlackCover isActive={bgInputValue !== ''}/>\r\n      <ReactTooltip />\r\n      {isShowTicker && <TopTicker isChangingLot={isChangingLot} lots={lots} />}\r\n      <Header setIsShowTicker={setIsShowTicker} />\r\n      <LotsList setIsChangingLot={setIsChangingLot} changeLots={changeLots} lots={lots} />\r\n      <SettingsButtons id=\"settings-wrapper\">\r\n        {isChangeBgActive && (\r\n          <BgInputWrapper>\r\n            <BgInput\r\n              placeholder=\"URL фона...\"\r\n              onChange={onChangeBgInputValueHandler}\r\n              value={bgInputValue}\r\n            />\r\n            <RemoveBgBtn onClick={clearBgInputValue} data-tip=\"Очистить фон\">\r\n              x\r\n            </RemoveBgBtn>\r\n          </BgInputWrapper>\r\n        )}\r\n        <BgChange\r\n          onClick={toggleBgChangeState}\r\n          data-place=\"left\"\r\n          data-effect='solid'\r\n          data-tip=\"Сменить фон\"\r\n          isActive={isChangeBgActive}\r\n          src={bgIcon}\r\n        />\r\n        <ToggleTicker\r\n          data-place=\"left\"\r\n          data-effect='solid'\r\n          data-tip={isShowTicker ? 'Убрать бегущую строку' : 'Показать бегущую строку'}\r\n          isActive={isShowTicker}\r\n          onClick={toggleTicker}\r\n          alt=\"ticker\"\r\n          src={tickerIcon}\r\n        />\r\n      </SettingsButtons>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}