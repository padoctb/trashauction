{"version":3,"sources":["img/bg.jpg","img/icons/ticker.svg","img/icons/play.svg","img/icons/stop.svg","img/icons/timeup.svg","img/icons/timedown.svg","img/icons/doubleup.svg","img/icons/pause.svg","img/icons/delete.svg","tools/index.js","components/Timer.js","tools/hooks/index.js","components/Header.js","components/Lot.js","components/LotsList.js","components/TopTicker.js","App.js","index.js"],"names":["module","exports","formatTime","time","ms","milliseconds","parseInt","seconds","Math","floor","minutes","generateId","random","toString","TimerWrapper","styled","div","TimeleftWrapper","TimeleftText","TimeleftControl","TimerBtn","img","Timer","initialTime","useState","isRunning","setIsRunning","prevTime","setPrevTime","currentMs","setCurrentMs","timeleft","setTimeleft","changeTime","newTime","Date","now","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","prev","diffTime","newMs","stopTimer","increaseMinute","e","increaseNumber","Number","target","getAttribute","onClick","className","alt","src","pauseIcon","playIcon","stopIcon","data-increase-number","timeUp","timeUpx2","timeDown","StyledHeader","header","Buyout","BayoutInput","input","Header","value","setValue","onChange","isNaN","Wrapper","li","Input","NameInput","Pos","RemoveBtn","Lot","lotData","name","price","pos","updateLot","deleteLot","setIsChangingLot","nameValue","setName","priceValue","setPrice","addPriceValue","setAddPrice","onBlurHandler","updatedPrice","onBlur","spellCheck","placeholder","deleteIcon","List","ul","NewLotWrapper","AddNewLotBtn","LotsList","lots","changeLots","newLotData","prevLots","map","lot","sort","a","b","removedLotData","length","setTimeout","filter","TransitionGroup","i","CSSTransition","key","timeout","enter","exit","classNames","newLots","push","TopTicket","span","LotWrapper","LotPosition","LotName","LotPrice","TickerWrapper","TopTicker","isChangingLot","tickerContent","lotsForRender","forEach","content","createContentForTicker","offset","speed","mode","GlobalStyle","createGlobalStyle","bg","ToggleTicker","App","isShowTicker","setIsShowTicker","prevState","tickerIcon","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2933a7f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.eb10c485.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ticker.c1bf77a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/play.0ad03614.svg\";","module.exports = __webpack_public_path__ + \"static/media/stop.a081961b.svg\";","module.exports = __webpack_public_path__ + \"static/media/timeup.a00f01e7.svg\";","module.exports = __webpack_public_path__ + \"static/media/timedown.9ed74592.svg\";","module.exports = __webpack_public_path__ + \"static/media/doubleup.97b6b174.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause.db1c4442.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.eedf38f8.svg\";","const formatMsDigits = ms => ms < 10 ? '0' + ms : '' + ms\r\n\r\nexport const formatTime = time => {\r\n  let milliseconds = parseInt(time % 1000),\r\n    seconds = Math.floor((time / 1000) % 60),\r\n    minutes = Math.floor(time / (1000 * 60));\r\n\r\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n  seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n  milliseconds = formatMsDigits(Math.floor(milliseconds / 10))\r\n\r\n  return {\r\n    milliseconds,\r\n    seconds,\r\n    minutes\r\n  };\r\n};\r\n\r\nexport const generateId = () => `f${(~~(Math.random()*1e8)).toString(16)}`","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useInterval } from '../tools/hooks';\r\nimport { formatTime } from '../tools';\r\nimport playIcon from '../img/icons/play.svg';\r\nimport stopIcon from '../img/icons/stop.svg';\r\nimport timeUp from '../img/icons/timeup.svg';\r\nimport timeDown from '../img/icons/timedown.svg';\r\nimport timeUpx2 from '../img/icons/doubleup.svg';\r\nimport pauseIcon from '../img/icons/pause.svg';\r\n\r\nconst TimerWrapper = styled.div`\r\n  display: flex;\r\n  font-size: 62px;\r\n  flex-direction: column;\r\n  &:hover .timer-btn {\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n\r\nconst TimeleftWrapper = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst TimeleftText = styled.div`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst TimeleftControl = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst TimerBtn = styled.img`\r\n  cursor: pointer;\r\n  transition: 0.2s ease;\r\n  opacity: 0;\r\n  &:hover {\r\n    opacity: 1 !important;\r\n    transform: scale(1.3);\r\n  }\r\n  &:active {\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\nconst interval = 10;\r\n\r\nconst Timer = ({ initialTime }) => {\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [prevTime, setPrevTime] = useState(null);\r\n  const [currentMs, setCurrentMs] = useState(initialTime);\r\n  const [timeleft, setTimeleft] = useState(formatTime(initialTime));\r\n\r\n  const changeTime = (ms) => {\r\n    const newTime = formatTime(ms);\r\n    setPrevTime(Date.now());\r\n    setCurrentMs(ms);\r\n    setTimeleft(newTime);\r\n  };\r\n\r\n  useInterval(\r\n    () => {\r\n      let prev = prevTime ? prevTime : Date.now();\r\n      let diffTime = Date.now() - prev;\r\n      let newMs = currentMs - diffTime;\r\n\r\n      if (newMs <= 10) {\r\n        stopTimer();\r\n      } else changeTime(newMs);\r\n    },\r\n    isRunning ? interval : null,\r\n  );\r\n\r\n  const handleTime = () => {\r\n    if (!currentMs) return;\r\n    setIsRunning(!isRunning);\r\n    setPrevTime(null);\r\n  };\r\n\r\n  const increaseMinute = (e) => {\r\n    const increaseNumber = Number(e.target.getAttribute('data-increase-number'));\r\n    const newMs = currentMs + 60000 * increaseNumber;\r\n\r\n    changeTime(newMs);\r\n  };\r\n\r\n  const decreaseMinute = () => {\r\n    if (currentMs <= 60000) return;\r\n    const newMs = currentMs - 60000;\r\n\r\n    changeTime(newMs);\r\n  };\r\n\r\n  const stopTimer = () => {\r\n    changeTime(0);\r\n    setIsRunning(false);\r\n  };\r\n\r\n  return (\r\n    <TimerWrapper>\r\n      <TimeleftWrapper>\r\n        <div>\r\n          <TimerBtn\r\n            onClick={handleTime}\r\n            className=\"timer-btn\"\r\n            alt=\"play\"\r\n            src={!isRunning ? playIcon : pauseIcon}\r\n          />\r\n        </div>\r\n        <TimeleftText>\r\n          {timeleft && `${timeleft.minutes}:${timeleft.seconds}:${timeleft.milliseconds}`}\r\n        </TimeleftText>\r\n        <div>\r\n          <TimerBtn onClick={stopTimer} className=\"timer-btn\" alt=\"stop\" src={stopIcon} />\r\n        </div>\r\n      </TimeleftWrapper>\r\n      <TimeleftControl>\r\n        <TimerBtn\r\n          onClick={increaseMinute}\r\n          data-increase-number=\"1\"\r\n          className=\"timer-btn\"\r\n          alt=\"timeup\"\r\n          src={timeUp}\r\n        />\r\n        <TimerBtn\r\n          onClick={increaseMinute}\r\n          data-increase-number=\"2\"\r\n          className=\"timer-btn\"\r\n          alt=\"timeupx2\"\r\n          src={timeUpx2}\r\n        />\r\n        <TimerBtn onClick={decreaseMinute} className=\"timer-btn\" alt=\"timedown\" src={timeDown} />\r\n      </TimeleftControl>\r\n    </TimerWrapper>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport function useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}","import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport Timer from './Timer'\r\n\r\nconst StyledHeader = styled.header`\r\n  font-size: 30px;\r\n  justify-content: space-between;\r\n  position: fixed;\r\n  right: 0;\r\n  top: 5%;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Buyout = styled.div`\r\n  opacity: .5;\r\n  font-weight: 500;\r\n  padding-left: 114px;\r\n  padding-top: 14px;\r\n  transform: translateY(10px);\r\n`\r\n\r\nconst BayoutInput = styled.input`\r\n  border: none;\r\n  outline: none;\r\n  margin-right: 22px;\r\n  background-color: transparent;\r\n  font-size: 30px;\r\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n  width: 90px;\r\n  color: #fff;\r\n`\r\n\r\nconst Header = () => {\r\n\r\n  const [value, setValue] = useState(4000)\r\n\r\n  const onChangeHandler = e => !isNaN(e.target.value) && setValue(e.target.value)\r\n\r\n  return (\r\n    <StyledHeader>\r\n      <Buyout>Выкуп: <BayoutInput onChange={onChangeHandler} value={value}/></Buyout>\r\n      <Timer initialTime={1500000}/>\r\n    </StyledHeader>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport deleteIcon from '../img/icons/delete.svg';\r\n\r\nconst Wrapper = styled.li`\r\n  font-size: 26px;\r\n  position: relative;\r\n  margin-left: 10px;\r\n  display: flex;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  border: 2px solid rgba(249, 249, 249, 0.3);\r\n  margin: 6px 0;\r\n  border-radius: 4px;\r\n  padding: 10px;\r\n  box-sizing: border-box;\r\n  background-color: transparent;\r\n  color: #fff;\r\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n  outline: none;\r\n  font-size: 22px;\r\n  margin-left: 5px;\r\n  transition: 0.2s ease;\r\n  width: 80px;\r\n  &:hover {\r\n    background-color: rgba(255, 255, 255, 0.2);\r\n  }\r\n  &::placeholder {\r\n    color: #fff;\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n\r\nconst NameInput = styled(Input)`\r\n  width: 100%;\r\n`;\r\n\r\nconst Pos = styled.div`\r\n  position: absolute;\r\n  left: -44px;\r\n  top: 50%;\r\n  opacity: 0.4;\r\n  transform: translateY(-50%);\r\n`;\r\n\r\nconst RemoveBtn = styled.img`\r\n  margin-left: 10px;\r\n  opacity: .6;\r\n  cursor: pointer;\r\n  transition: 0.2s ease;\r\n  &:hover {\r\n    opacity: 1;\r\n    transform: scale(1.2);\r\n  }\r\n  &:active {\r\n    transform: scale(0.9);\r\n  }\r\n`;\r\n\r\nconst Lot = ({ lotData: { name, id, price }, pos, updateLot, deleteLot, lotData, setIsChangingLot }) => {\r\n  const [nameValue, setName] = useState(name);\r\n  const [priceValue, setPrice] = useState(price);\r\n  const [addPriceValue, setAddPrice] = useState('');\r\n\r\n  const onNameChange = (e) => {\r\n    setIsChangingLot(true)\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const onPriceChange = (e) => {\r\n    setIsChangingLot(true)\r\n    if(isNaN(e.target.value)) return;\r\n    setPrice(e.target.value);\r\n  };\r\n\r\n  const onAddPriceChange = (e) => {\r\n    setIsChangingLot(true)\r\n    if(isNaN(e.target.value)) return;\r\n    setAddPrice(e.target.value);\r\n  };\r\n\r\n  const onBlurHandler = () => {\r\n    setIsChangingLot(false)\r\n    const updatedPrice = Number(priceValue) + Number(addPriceValue);\r\n    setPrice(updatedPrice);\r\n    setAddPrice('');\r\n\r\n    updateLot({\r\n      name: nameValue,\r\n      price: updatedPrice,\r\n      id,\r\n    });\r\n  };\r\n\r\n  const onDelete = () => deleteLot(lotData)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Pos>{pos}.</Pos>\r\n      <NameInput\r\n        onBlur={onBlurHandler}\r\n        onChange={onNameChange}\r\n        spellCheck=\"false\"\r\n        value={nameValue}\r\n        placeholder=\"Позиция\"\r\n      />\r\n      <Input\r\n        onBlur={onBlurHandler}\r\n        onChange={onPriceChange}\r\n        spellCheck=\"false\"\r\n        value={priceValue}\r\n        placeholder=\"P\"\r\n      />\r\n      <Input\r\n        onBlur={onBlurHandler}\r\n        onChange={onAddPriceChange}\r\n        spellCheck=\"false\"\r\n        value={addPriceValue}\r\n        placeholder=\"+\"\r\n      />\r\n      <RemoveBtn onClick={onDelete} alt=\"delete\" src={deleteIcon} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Lot;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport Lot from './Lot';\r\nimport { generateId } from '../tools';\r\nimport '../style/styles.css';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 100px 340px 100px 40px;\r\n`;\r\n\r\nconst List = styled.ul`\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n`;\r\n\r\nconst NewLotWrapper = styled.div``;\r\n\r\nconst AddNewLotBtn = styled.div`\r\n  width: 50px;\r\n  text-align: center;\r\n  background-color: rgba(249, 249, 249, 0.3);\r\n  border-radius: 4px;\r\n  float: right;\r\n  margin-top: 8px;\r\n  cursor: pointer;\r\n  transition: 0.2s ease;\r\n  &:hover {\r\n    background-color: rgba(249, 249, 249, 0.5);\r\n    transform: scale(1.2);\r\n  }\r\n  &:active {\r\n    transform: scale(0.9);\r\n  }\r\n`;\r\n\r\nconst LotsList = ({ lots, changeLots, setIsChangingLot }) => {\r\n  const addNewLot = () => {\r\n    changeLots((prevLots) => {\r\n      const newLots = [...prevLots];\r\n      newLots.push({ name: '', id: generateId(), price: 0 });\r\n      return newLots;\r\n    });\r\n  };\r\n\r\n  const updateLot = (newLotData) => {\r\n    changeLots((prevLots) => {\r\n      const newLots = [...prevLots].map((lot) => {\r\n        if (lot.id === newLotData.id) {\r\n          return newLotData;\r\n        }\r\n\r\n        return lot;\r\n      });\r\n\r\n      return newLots.sort((a, b) => b.price - a.price);\r\n    });\r\n  };\r\n\r\n  const deleteLot = (removedLotData) => {\r\n    if (lots.length === 1) return;\r\n    setIsChangingLot(true);\r\n    changeLots((prevLots) => {\r\n      setTimeout(() => setIsChangingLot(false), 0);\r\n      return [...prevLots].filter((lot) => lot.id !== removedLotData.id);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <List>\r\n        <TransitionGroup>\r\n          {lots.map((lot, i) => (\r\n            <CSSTransition key={lot.id} timeout={{\r\n              enter: 300,\r\n              exit: 0\r\n            }} classNames=\"item\">\r\n              <Lot\r\n                setIsChangingLot={setIsChangingLot}\r\n                deleteLot={deleteLot}\r\n                updateLot={updateLot}\r\n                key={lot.id}\r\n                pos={++i}\r\n                lotData={lot}\r\n              />\r\n            </CSSTransition>\r\n          ))}\r\n        </TransitionGroup>\r\n      </List>\r\n      <NewLotWrapper>\r\n        <AddNewLotBtn onClick={addNewLot}>+</AddNewLotBtn>\r\n      </NewLotWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default LotsList;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Ticker from 'react-ticker';\r\n\r\nconst TopTicket = styled.span`\r\n  font-weight: 400;\r\n  font-size: 22px;\r\n`;\r\n\r\nconst LotWrapper = styled.span`\r\n  padding: 0 22px;\r\n  &:last-child {\r\n    padding-right: 400px;\r\n  }\r\n`;\r\n\r\nconst LotPosition = styled.span``;\r\n\r\nconst LotName = styled.span``;\r\n\r\nconst LotPrice = styled.span`\r\n  padding: 0 4px;\r\n`;\r\n\r\nconst TickerWrapper = styled.div`\r\n  position: fixed;\r\n  width: 20000px;\r\n  top: 0;\r\n  left: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  height: 36px;\r\n`;\r\n\r\nconst TopTicker = ({ lots, isChangingLot }) => {\r\n\r\n  const createContentForTicker = (lots) => {\r\n    const lotsForRender = [];\r\n\r\n    lots.forEach((lot, i) => {\r\n      if (!lot.name) return;\r\n\r\n      lotsForRender.push({\r\n        content: (\r\n          <span>\r\n            <LotPosition>{++i}. </LotPosition>\r\n            <LotName>{lot.name}</LotName>\r\n            <LotPrice>({lot.price})</LotPrice>\r\n          </span>\r\n        ),\r\n        id: lot.id,\r\n      });\r\n    });\r\n\r\n    return lotsForRender;\r\n  };\r\n\r\n  const tickerContent = createContentForTicker(lots);\r\n\r\n  return (\r\n    <>\r\n      {(\r\n        <TickerWrapper>\r\n          {!isChangingLot && (\r\n            <Ticker offset={600} speed={15} mode=\"chain\">\r\n              {() => (\r\n                <TopTicket>\r\n                  {tickerContent.length > 1 &&\r\n                    tickerContent.map((lot) => <LotWrapper key={lot.id}>{lot.content}</LotWrapper>)}\r\n                </TopTicket>\r\n              )}\r\n            </Ticker>\r\n          )}\r\n        </TickerWrapper>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TopTicker;\r\n","import React, { useState } from 'react';\r\nimport styled, { createGlobalStyle } from 'styled-components';\r\nimport bg from './img/bg.jpg';\r\nimport tickerIcon from './img/icons/ticker.svg'\r\nimport Header from './components/Header';\r\nimport LotsList from './components/LotsList';\r\nimport TopTicker from './components/TopTicker'\r\nimport { generateId } from './tools';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    background-image: url(${bg});\r\n    background-size: cover;\r\n    background-attachment: fixed;\r\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n    font-size: 24px;\r\n    color: #fff;\r\n    font-weight: 600;\r\n    min-width: 600px;\r\n  }\r\n`;\r\n\r\nconst ToggleTicker = styled.img`\r\n  position: fixed;\r\n  width: 40px;\r\n  height: 40px;\r\n  bottom: 6px;\r\n  right: 10px;\r\n  opacity: .3;\r\n  cursor: pointer;\r\n  transition: .2s ease;\r\n  &:hover {\r\n    opacity: 1;\r\n    transform: scale(1.2);\r\n  }\r\n  &:active {\r\n    transform: scale(1);\r\n  }\r\n`\r\n\r\nconst App = () => {\r\n  const [lots, changeLots] = useState([\r\n    {\r\n      name: '',\r\n      id: generateId(),\r\n      price: 0,\r\n    },\r\n  ]);\r\n\r\n  const [isChangingLot, setIsChangingLot] = useState(false);\r\n  const [isShowTicker, setIsShowTicker] = useState(true)\r\n\r\n  const toggleTicker = () => setIsShowTicker(prevState => !prevState);\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      {isShowTicker && <TopTicker isChangingLot={isChangingLot} lots={lots}/>}\r\n      <Header setIsShowTicker={setIsShowTicker}/>\r\n      <LotsList setIsChangingLot={setIsChangingLot} changeLots={changeLots} lots={lots} />\r\n      <ToggleTicker onClick={toggleTicker} alt='ticker' src={tickerIcon}/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}